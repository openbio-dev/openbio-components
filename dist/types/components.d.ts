/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface CnhPreview {
    'inputSignature': any;
    'person': any;
    'photo': any;
    'size': PreviewSize;
  }
  interface CnhPreviewAttributes extends StencilHTMLAttributes {
    'inputSignature'?: any;
    'person'?: any;
    'photo'?: any;
    'size'?: PreviewSize;
  }

  interface HelpComponent {
    'helpText': string;
    'locale': string;
    'src': string;
  }
  interface HelpComponentAttributes extends StencilHTMLAttributes {
    'helpText'?: string;
    'locale'?: string;
    'src'?: string;
  }

  interface ImageCropperComponent {
    'aspectRatio': any;
    'cropBoxResizable': boolean;
    'cropCallback': any;
    'currentElementTag': string;
    'locale': string;
    'parentComponentContext': any;
    'parentElementTag': string;
    'src': string;
  }
  interface ImageCropperComponentAttributes extends StencilHTMLAttributes {
    'aspectRatio'?: any;
    'cropBoxResizable'?: boolean;
    'cropCallback'?: any;
    'currentElementTag'?: string;
    'locale'?: string;
    'parentComponentContext'?: any;
    'parentElementTag'?: string;
    'src'?: string;
  }

  interface ImageFilterComponent {
    'currentElementTag': string;
    'filterCallback': any;
    'locale': string;
    'parentComponentContext': any;
    'parentElementTag': string;
    'src': string;
  }
  interface ImageFilterComponentAttributes extends StencilHTMLAttributes {
    'currentElementTag'?: string;
    'filterCallback'?: any;
    'locale'?: string;
    'parentComponentContext'?: any;
    'parentElementTag'?: string;
    'src'?: string;
  }

  interface ImageSegmentationAdjustmentComponent {
    'currentElementTag': string;
    'imageAdjustmentCallback': any;
    'originalImage': any;
    'parentComponentContext': any;
    'parentElementTag': string;
    'saveAdjustedImageCallback': any;
    'segmentedImage': any;
  }
  interface ImageSegmentationAdjustmentComponentAttributes extends StencilHTMLAttributes {
    'currentElementTag'?: string;
    'imageAdjustmentCallback'?: any;
    'originalImage'?: any;
    'parentComponentContext'?: any;
    'parentElementTag'?: string;
    'saveAdjustedImageCallback'?: any;
    'segmentedImage'?: any;
  }

  interface LoaderComponent {
    'enabled': boolean;
  }
  interface LoaderComponentAttributes extends StencilHTMLAttributes {
    'enabled'?: boolean;
  }

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface NotificationComponent {
    'notificationType': string;
    'text': string;
  }
  interface NotificationComponentAttributes extends StencilHTMLAttributes {
    'notificationType'?: string;
    'text'?: string;
  }

  interface OpenbioFaceAuth {
    'cpf': string;
    'hiddenCamera': boolean;
    'isDebug': boolean;
    'locale': string;
    'personImage': string;
    'personName': string;
    'useOpenbioMatcher': boolean;
  }
  interface OpenbioFaceAuthAttributes extends StencilHTMLAttributes {
    'cpf'?: string;
    'hiddenCamera'?: boolean;
    'isDebug'?: boolean;
    'locale'?: string;
    'onOnMatcherResult'?: (event: CustomEvent<any>) => void;
    'personImage'?: string;
    'personName'?: string;
    'useOpenbioMatcher'?: boolean;
  }

  interface OpenbioFaceDetails {
    'detached': boolean;
    'isTagComponent': boolean;
    'locale': string;
    'tempFace': any;
    'tempPerson': any;
  }
  interface OpenbioFaceDetailsAttributes extends StencilHTMLAttributes {
    'detached'?: boolean;
    'isTagComponent'?: boolean;
    'locale'?: string;
    'tempFace'?: any;
    'tempPerson'?: any;
  }

  interface OpenbioFace {
    'locale': string;
  }
  interface OpenbioFaceAttributes extends StencilHTMLAttributes {
    'locale'?: string;
  }

  interface OpenbioFaceValidationBoxComponent {
    'detached': boolean;
    'leftIcon': boolean;
    'locale': string;
    'status': any;
    'type': string;
    'typeTitle': string;
  }
  interface OpenbioFaceValidationBoxComponentAttributes extends StencilHTMLAttributes {
    'detached'?: boolean;
    'leftIcon'?: boolean;
    'locale'?: string;
    'status'?: any;
    'type'?: string;
    'typeTitle'?: string;
  }

  interface OpenbioFingerAuth {
    'cpf': string;
    'isDebug': boolean;
    'locale': string;
    'personImage': string;
    'personName': string;
    'useOpenbioMatcher': boolean;
  }
  interface OpenbioFingerAuthAttributes extends StencilHTMLAttributes {
    'cpf'?: string;
    'isDebug'?: boolean;
    'locale'?: string;
    'onOnCaptureFingerprintResult'?: (event: CustomEvent<any>) => void;
    'onOnMatcherResult'?: (event: CustomEvent<any>) => void;
    'personImage'?: string;
    'personName'?: string;
    'useOpenbioMatcher'?: boolean;
  }

  interface OpenbioFingerDetails {
    'cpf': string;
    'detached': boolean;
    'fingerCaptureType': number;
    'isTagComponent': boolean;
    'locale': string;
    'onCaptureFingerprint': Function;
    'onOpenbioMatcher': Function;
    'personImage': string;
    'personName': string;
    'singleCapture': boolean;
    'tempFingers': any;
    'tempPerson': any;
    'useOpenbioMatcher': boolean;
  }
  interface OpenbioFingerDetailsAttributes extends StencilHTMLAttributes {
    'cpf'?: string;
    'detached'?: boolean;
    'fingerCaptureType'?: number;
    'isTagComponent'?: boolean;
    'locale'?: string;
    'onCaptureFingerprint'?: Function;
    'onOpenbioMatcher'?: Function;
    'personImage'?: string;
    'personName'?: string;
    'singleCapture'?: boolean;
    'tempFingers'?: any;
    'tempPerson'?: any;
    'useOpenbioMatcher'?: boolean;
  }

  interface OpenbioFinger {
    'locale': string;
  }
  interface OpenbioFingerAttributes extends StencilHTMLAttributes {
    'locale'?: string;
  }

  interface OpenbioFingerImageComponent {
    'allowUpload': boolean;
    'editFingerCallback': any;
    'finger': any;
    'fingerIndex': number;
    'fingerName': string;
    'locale': string;
    'parentComponentContext': any;
    'uploadFingerImageCallback': any;
  }
  interface OpenbioFingerImageComponentAttributes extends StencilHTMLAttributes {
    'allowUpload'?: boolean;
    'editFingerCallback'?: any;
    'finger'?: any;
    'fingerIndex'?: number;
    'fingerName'?: string;
    'locale'?: string;
    'parentComponentContext'?: any;
    'uploadFingerImageCallback'?: any;
  }

  interface OpenbioMugshotDetails {
    'allowConfiguration': any;
    'detached': boolean;
    'isTagComponent': boolean;
    'locale': string;
    'tempMugshotPhotos': any;
    'tempPerson': any;
  }
  interface OpenbioMugshotDetailsAttributes extends StencilHTMLAttributes {
    'allowConfiguration'?: any;
    'detached'?: boolean;
    'isTagComponent'?: boolean;
    'locale'?: string;
    'tempMugshotPhotos'?: any;
    'tempPerson'?: any;
  }

  interface OpenbioMugshot {
    'locale': string;
  }
  interface OpenbioMugshotAttributes extends StencilHTMLAttributes {
    'locale'?: string;
  }

  interface OpenbioOmaFace {
    'action': 'REGISTER' | 'VERIFY';
    'callback': Function;
    'cameraHeight': number;
    'cameraWidth': number;
    'containerBackgroundColor': string;
    'headerTitle': string;
    'livenessMin': number;
    'locale': string;
    'primaryColor': string;
    'projectId': string;
    'recordId': string;
    'requestKey': string;
    'showHeader': boolean;
    'textColor': string;
    'token': string;
  }
  interface OpenbioOmaFaceAttributes extends StencilHTMLAttributes {
    'action'?: 'REGISTER' | 'VERIFY';
    'callback'?: Function;
    'cameraHeight'?: number;
    'cameraWidth'?: number;
    'containerBackgroundColor'?: string;
    'headerTitle'?: string;
    'livenessMin'?: number;
    'locale'?: string;
    'primaryColor'?: string;
    'projectId'?: string;
    'recordId'?: string;
    'requestKey'?: string;
    'showHeader'?: boolean;
    'textColor'?: string;
    'token'?: string;
  }

  interface OpenbioScannerDetails {
    'detached': boolean;
    'isTagComponent': boolean;
    'locale': string;
    'tempPerson': any;
  }
  interface OpenbioScannerDetailsAttributes extends StencilHTMLAttributes {
    'detached'?: boolean;
    'isTagComponent'?: boolean;
    'locale'?: string;
    'tempPerson'?: any;
  }

  interface OpenbioScanner {}
  interface OpenbioScannerAttributes extends StencilHTMLAttributes {}

  interface OpenbioSignatureDetails {
    'detached': boolean;
    'isTagComponent': boolean;
    'locale': string;
    'tempPerson': any;
    'tempSignature': any;
  }
  interface OpenbioSignatureDetailsAttributes extends StencilHTMLAttributes {
    'detached'?: boolean;
    'isTagComponent'?: boolean;
    'locale'?: string;
    'tempPerson'?: any;
    'tempSignature'?: any;
  }

  interface OpenbioSignature {
    'locale': string;
  }
  interface OpenbioSignatureAttributes extends StencilHTMLAttributes {
    'locale'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CnhPreview': Components.CnhPreview;
    'HelpComponent': Components.HelpComponent;
    'ImageCropperComponent': Components.ImageCropperComponent;
    'ImageFilterComponent': Components.ImageFilterComponent;
    'ImageSegmentationAdjustmentComponent': Components.ImageSegmentationAdjustmentComponent;
    'LoaderComponent': Components.LoaderComponent;
    'MyComponent': Components.MyComponent;
    'NotificationComponent': Components.NotificationComponent;
    'OpenbioFaceAuth': Components.OpenbioFaceAuth;
    'OpenbioFaceDetails': Components.OpenbioFaceDetails;
    'OpenbioFace': Components.OpenbioFace;
    'OpenbioFaceValidationBoxComponent': Components.OpenbioFaceValidationBoxComponent;
    'OpenbioFingerAuth': Components.OpenbioFingerAuth;
    'OpenbioFingerDetails': Components.OpenbioFingerDetails;
    'OpenbioFinger': Components.OpenbioFinger;
    'OpenbioFingerImageComponent': Components.OpenbioFingerImageComponent;
    'OpenbioMugshotDetails': Components.OpenbioMugshotDetails;
    'OpenbioMugshot': Components.OpenbioMugshot;
    'OpenbioOmaFace': Components.OpenbioOmaFace;
    'OpenbioScannerDetails': Components.OpenbioScannerDetails;
    'OpenbioScanner': Components.OpenbioScanner;
    'OpenbioSignatureDetails': Components.OpenbioSignatureDetails;
    'OpenbioSignature': Components.OpenbioSignature;
  }

  interface StencilIntrinsicElements {
    'cnh-preview': Components.CnhPreviewAttributes;
    'help-component': Components.HelpComponentAttributes;
    'image-cropper-component': Components.ImageCropperComponentAttributes;
    'image-filter-component': Components.ImageFilterComponentAttributes;
    'image-segmentation-adjustment-component': Components.ImageSegmentationAdjustmentComponentAttributes;
    'loader-component': Components.LoaderComponentAttributes;
    'my-component': Components.MyComponentAttributes;
    'notification-component': Components.NotificationComponentAttributes;
    'openbio-face-auth': Components.OpenbioFaceAuthAttributes;
    'openbio-face-details': Components.OpenbioFaceDetailsAttributes;
    'openbio-face': Components.OpenbioFaceAttributes;
    'openbio-face-validation-box-component': Components.OpenbioFaceValidationBoxComponentAttributes;
    'openbio-finger-auth': Components.OpenbioFingerAuthAttributes;
    'openbio-finger-details': Components.OpenbioFingerDetailsAttributes;
    'openbio-finger': Components.OpenbioFingerAttributes;
    'openbio-finger-image-component': Components.OpenbioFingerImageComponentAttributes;
    'openbio-mugshot-details': Components.OpenbioMugshotDetailsAttributes;
    'openbio-mugshot': Components.OpenbioMugshotAttributes;
    'openbio-oma-face': Components.OpenbioOmaFaceAttributes;
    'openbio-scanner-details': Components.OpenbioScannerDetailsAttributes;
    'openbio-scanner': Components.OpenbioScannerAttributes;
    'openbio-signature-details': Components.OpenbioSignatureDetailsAttributes;
    'openbio-signature': Components.OpenbioSignatureAttributes;
  }


  interface HTMLCnhPreviewElement extends Components.CnhPreview, HTMLStencilElement {}
  var HTMLCnhPreviewElement: {
    prototype: HTMLCnhPreviewElement;
    new (): HTMLCnhPreviewElement;
  };

  interface HTMLHelpComponentElement extends Components.HelpComponent, HTMLStencilElement {}
  var HTMLHelpComponentElement: {
    prototype: HTMLHelpComponentElement;
    new (): HTMLHelpComponentElement;
  };

  interface HTMLImageCropperComponentElement extends Components.ImageCropperComponent, HTMLStencilElement {}
  var HTMLImageCropperComponentElement: {
    prototype: HTMLImageCropperComponentElement;
    new (): HTMLImageCropperComponentElement;
  };

  interface HTMLImageFilterComponentElement extends Components.ImageFilterComponent, HTMLStencilElement {}
  var HTMLImageFilterComponentElement: {
    prototype: HTMLImageFilterComponentElement;
    new (): HTMLImageFilterComponentElement;
  };

  interface HTMLImageSegmentationAdjustmentComponentElement extends Components.ImageSegmentationAdjustmentComponent, HTMLStencilElement {}
  var HTMLImageSegmentationAdjustmentComponentElement: {
    prototype: HTMLImageSegmentationAdjustmentComponentElement;
    new (): HTMLImageSegmentationAdjustmentComponentElement;
  };

  interface HTMLLoaderComponentElement extends Components.LoaderComponent, HTMLStencilElement {}
  var HTMLLoaderComponentElement: {
    prototype: HTMLLoaderComponentElement;
    new (): HTMLLoaderComponentElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLNotificationComponentElement extends Components.NotificationComponent, HTMLStencilElement {}
  var HTMLNotificationComponentElement: {
    prototype: HTMLNotificationComponentElement;
    new (): HTMLNotificationComponentElement;
  };

  interface HTMLOpenbioFaceAuthElement extends Components.OpenbioFaceAuth, HTMLStencilElement {}
  var HTMLOpenbioFaceAuthElement: {
    prototype: HTMLOpenbioFaceAuthElement;
    new (): HTMLOpenbioFaceAuthElement;
  };

  interface HTMLOpenbioFaceDetailsElement extends Components.OpenbioFaceDetails, HTMLStencilElement {}
  var HTMLOpenbioFaceDetailsElement: {
    prototype: HTMLOpenbioFaceDetailsElement;
    new (): HTMLOpenbioFaceDetailsElement;
  };

  interface HTMLOpenbioFaceElement extends Components.OpenbioFace, HTMLStencilElement {}
  var HTMLOpenbioFaceElement: {
    prototype: HTMLOpenbioFaceElement;
    new (): HTMLOpenbioFaceElement;
  };

  interface HTMLOpenbioFaceValidationBoxComponentElement extends Components.OpenbioFaceValidationBoxComponent, HTMLStencilElement {}
  var HTMLOpenbioFaceValidationBoxComponentElement: {
    prototype: HTMLOpenbioFaceValidationBoxComponentElement;
    new (): HTMLOpenbioFaceValidationBoxComponentElement;
  };

  interface HTMLOpenbioFingerAuthElement extends Components.OpenbioFingerAuth, HTMLStencilElement {}
  var HTMLOpenbioFingerAuthElement: {
    prototype: HTMLOpenbioFingerAuthElement;
    new (): HTMLOpenbioFingerAuthElement;
  };

  interface HTMLOpenbioFingerDetailsElement extends Components.OpenbioFingerDetails, HTMLStencilElement {}
  var HTMLOpenbioFingerDetailsElement: {
    prototype: HTMLOpenbioFingerDetailsElement;
    new (): HTMLOpenbioFingerDetailsElement;
  };

  interface HTMLOpenbioFingerElement extends Components.OpenbioFinger, HTMLStencilElement {}
  var HTMLOpenbioFingerElement: {
    prototype: HTMLOpenbioFingerElement;
    new (): HTMLOpenbioFingerElement;
  };

  interface HTMLOpenbioFingerImageComponentElement extends Components.OpenbioFingerImageComponent, HTMLStencilElement {}
  var HTMLOpenbioFingerImageComponentElement: {
    prototype: HTMLOpenbioFingerImageComponentElement;
    new (): HTMLOpenbioFingerImageComponentElement;
  };

  interface HTMLOpenbioMugshotDetailsElement extends Components.OpenbioMugshotDetails, HTMLStencilElement {}
  var HTMLOpenbioMugshotDetailsElement: {
    prototype: HTMLOpenbioMugshotDetailsElement;
    new (): HTMLOpenbioMugshotDetailsElement;
  };

  interface HTMLOpenbioMugshotElement extends Components.OpenbioMugshot, HTMLStencilElement {}
  var HTMLOpenbioMugshotElement: {
    prototype: HTMLOpenbioMugshotElement;
    new (): HTMLOpenbioMugshotElement;
  };

  interface HTMLOpenbioOmaFaceElement extends Components.OpenbioOmaFace, HTMLStencilElement {}
  var HTMLOpenbioOmaFaceElement: {
    prototype: HTMLOpenbioOmaFaceElement;
    new (): HTMLOpenbioOmaFaceElement;
  };

  interface HTMLOpenbioScannerDetailsElement extends Components.OpenbioScannerDetails, HTMLStencilElement {}
  var HTMLOpenbioScannerDetailsElement: {
    prototype: HTMLOpenbioScannerDetailsElement;
    new (): HTMLOpenbioScannerDetailsElement;
  };

  interface HTMLOpenbioScannerElement extends Components.OpenbioScanner, HTMLStencilElement {}
  var HTMLOpenbioScannerElement: {
    prototype: HTMLOpenbioScannerElement;
    new (): HTMLOpenbioScannerElement;
  };

  interface HTMLOpenbioSignatureDetailsElement extends Components.OpenbioSignatureDetails, HTMLStencilElement {}
  var HTMLOpenbioSignatureDetailsElement: {
    prototype: HTMLOpenbioSignatureDetailsElement;
    new (): HTMLOpenbioSignatureDetailsElement;
  };

  interface HTMLOpenbioSignatureElement extends Components.OpenbioSignature, HTMLStencilElement {}
  var HTMLOpenbioSignatureElement: {
    prototype: HTMLOpenbioSignatureElement;
    new (): HTMLOpenbioSignatureElement;
  };

  interface HTMLElementTagNameMap {
    'cnh-preview': HTMLCnhPreviewElement
    'help-component': HTMLHelpComponentElement
    'image-cropper-component': HTMLImageCropperComponentElement
    'image-filter-component': HTMLImageFilterComponentElement
    'image-segmentation-adjustment-component': HTMLImageSegmentationAdjustmentComponentElement
    'loader-component': HTMLLoaderComponentElement
    'my-component': HTMLMyComponentElement
    'notification-component': HTMLNotificationComponentElement
    'openbio-face-auth': HTMLOpenbioFaceAuthElement
    'openbio-face-details': HTMLOpenbioFaceDetailsElement
    'openbio-face': HTMLOpenbioFaceElement
    'openbio-face-validation-box-component': HTMLOpenbioFaceValidationBoxComponentElement
    'openbio-finger-auth': HTMLOpenbioFingerAuthElement
    'openbio-finger-details': HTMLOpenbioFingerDetailsElement
    'openbio-finger': HTMLOpenbioFingerElement
    'openbio-finger-image-component': HTMLOpenbioFingerImageComponentElement
    'openbio-mugshot-details': HTMLOpenbioMugshotDetailsElement
    'openbio-mugshot': HTMLOpenbioMugshotElement
    'openbio-oma-face': HTMLOpenbioOmaFaceElement
    'openbio-scanner-details': HTMLOpenbioScannerDetailsElement
    'openbio-scanner': HTMLOpenbioScannerElement
    'openbio-signature-details': HTMLOpenbioSignatureDetailsElement
    'openbio-signature': HTMLOpenbioSignatureElement
  }

  interface ElementTagNameMap {
    'cnh-preview': HTMLCnhPreviewElement;
    'help-component': HTMLHelpComponentElement;
    'image-cropper-component': HTMLImageCropperComponentElement;
    'image-filter-component': HTMLImageFilterComponentElement;
    'image-segmentation-adjustment-component': HTMLImageSegmentationAdjustmentComponentElement;
    'loader-component': HTMLLoaderComponentElement;
    'my-component': HTMLMyComponentElement;
    'notification-component': HTMLNotificationComponentElement;
    'openbio-face-auth': HTMLOpenbioFaceAuthElement;
    'openbio-face-details': HTMLOpenbioFaceDetailsElement;
    'openbio-face': HTMLOpenbioFaceElement;
    'openbio-face-validation-box-component': HTMLOpenbioFaceValidationBoxComponentElement;
    'openbio-finger-auth': HTMLOpenbioFingerAuthElement;
    'openbio-finger-details': HTMLOpenbioFingerDetailsElement;
    'openbio-finger': HTMLOpenbioFingerElement;
    'openbio-finger-image-component': HTMLOpenbioFingerImageComponentElement;
    'openbio-mugshot-details': HTMLOpenbioMugshotDetailsElement;
    'openbio-mugshot': HTMLOpenbioMugshotElement;
    'openbio-oma-face': HTMLOpenbioOmaFaceElement;
    'openbio-scanner-details': HTMLOpenbioScannerDetailsElement;
    'openbio-scanner': HTMLOpenbioScannerElement;
    'openbio-signature-details': HTMLOpenbioSignatureDetailsElement;
    'openbio-signature': HTMLOpenbioSignatureElement;
  }


}
